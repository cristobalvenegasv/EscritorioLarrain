/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import java.sql.*;
import clases.Conexion;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author cris
 */
public class GestionOrdenes extends javax.swing.JFrame {

    
    String user;
    
    /* Variable para enviar datos entre las ventanas */
    public static String orden_update = "";
    /* Accesos a metodos para modificar datos en el interior de la tabla */
    DefaultTableModel model = new DefaultTableModel();
    
    /**
     * Creates new form OrdenesRegistradas
     */
    public GestionOrdenes() {
        initComponents();        
        
        user = Login.user;
        
        setSize(700, 500);
        setTitle("Gestión de Órdenes");
        setResizable(false);
        setLocationRelativeTo(null);
        
        /* Con esto evitamos que el programa finalice cuando se cierra la ventana */
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        
        ImageIcon fondo = new ImageIcon("src/imagenes/blanco.jpg");
        Icon icono = new ImageIcon(fondo.getImage().getScaledInstance(jLabel_Fondo.getWidth(),jLabel_Fondo.getHeight(),
                Image.SCALE_DEFAULT));
        
        jLabel_Fondo.setIcon(icono);
        this.repaint();
        
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                "select po.ID, pu.FIRST_NAME, po.STATUS, to_char(po.PAIDAT, 'dd/mm/yyyy'), po.TOTALPRICE, po.TRANSACTION_ID from PUNTOVENTAS_ORDERS po inner join PUNTOVENTAS_USER pu on(po.id = pu.id) union all select po.ID, pu.FIRST_NAME, po.STATUS, to_char(po.PAIDAT, 'dd/mm/yyyy'), po.TOTALPRICE, po.TRANSACTION_ID from PUNTOVENTAS_USER pu inner join PUNTOVENTAS_ORDERS po on(pu.id = po.id)");
            
            ResultSet rs = pst.executeQuery();
            /* Se utiliza el jtable de ordenes */
            jTable_ordenes = new JTable(model);
            /* Se utiliza para usar un scroll en caso de que la cantidad de datos sea mucha mas grande que la tabla */
            jScrollPane1.setViewportView(jTable_ordenes);
            
            /* Añado las columnas que voy a utilizar. La primera es el ID */
            model.addColumn("Id");
            model.addColumn("Nombre");
            model.addColumn("Estado");
            model.addColumn("Fecha de orden");
            model.addColumn("Precio total");
            model.addColumn("Número de transacción");
            
            while(rs.next()) {
                /* Vector de tipo Object por el tipo de dato que tiene el JTable */ 
                /* Ademas agregamos 6 por las 6 columnas que hay en nuestra tabla*/
                Object[] fila = new Object[6];
                
                /* Mientras i sea menor a 6(cantidad de columnas) este se irá incrementando */
                for (int i = 0; i < 6; i++) {
                    /* Aquí obtenemos los objetos i + 1 puesto que aquí recorrera a partir de 0 y subando 1 hasta la cantidad de columnas*/
                    fila[i] = rs.getObject(i + 1);
                }
                /* Aquí agrego las filas encontradas a nuestro objeto model */
                model.addRow(fila);
            }
            cn.close();
        } catch (Exception e) {
            System.err.println("Error al llenar con datos la tabla" + e);
            JOptionPane.showMessageDialog(null, "Error al visualizar los datos de la tabla");
        }
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/Favicon.png"));
        return retValue;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_Titulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_ordenes = new javax.swing.JTable();
        jButton_Imprimir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton_Barras = new javax.swing.JButton();
        jButton_Circular = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel_Fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_Titulo.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel_Titulo.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Titulo.setText("Órdenes de Compra");
        getContentPane().add(jLabel_Titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 14, -1, -1));

        jTable_ordenes.setBackground(new java.awt.Color(204, 204, 204));
        jTable_ordenes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jScrollPane1.setViewportView(jTable_ordenes);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 640, 180));

        jButton_Imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/print.png"))); // NOI18N
        jButton_Imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ImprimirActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Imprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 140, 140));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Imprimir Órdenes");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 430, -1, -1));

        jButton_Barras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/barchart.png"))); // NOI18N
        jButton_Barras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BarrasActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Barras, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 290, 140, 140));

        jButton_Circular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/LinearChart.png"))); // NOI18N
        jButton_Circular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CircularActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Circular, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 290, 140, 140));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Gráficos de Ventas");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 430, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Gráfico de Tendencia");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(472, 430, -1, -1));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 60));
        getContentPane().add(jLabel_Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_ImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ImprimirActionPerformed
        // TODO add your handling code here:
        
        /* Se crea un objeto de la clase document obtenido desde nuestra libreria */
        Document documento = new Document();
        
        /* Aquí genero la estructura de nuestro pdf */
        try {
            /* Damos la ubicación a la ruta donde enviaremos el pdf */
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Desktop/" + "Reporte-Ordenes" + ".pdf"));
            
            /* Acá se obtiene la imagen para darle el encabezado al formato del pdf */
            com.itextpdf.text.Image encabezado = com.itextpdf.text.Image.getInstance("src/imagenes/logo_wykep.png");
            
            /* Dimensiones para el encabezado, osea, la imagen */
            encabezado.scaleToFit(500,500);
            encabezado.setAlignment(Chunk.ALIGN_CENTER);
            
            Paragraph parrafo = new Paragraph();
            parrafo.setAlignment(Paragraph.ALIGN_CENTER);
            parrafo.add("Ventas realizadas \n \n");
            parrafo.setFont(FontFactory.getFont("Arial", 12, Font.NORMAL, BaseColor.LIGHT_GRAY));
                        
            documento.open();
            documento.add(encabezado);
            documento.add(parrafo);
            
            PdfPTable ordenes = new PdfPTable(5);
            ordenes.addCell("Número de transacción");
            ordenes.addCell("Nombre Cliente");
            ordenes.addCell("Estado");
            ordenes.addCell("Precio Pagado");
            ordenes.addCell("Fecha de pago");
            
            
            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                "select po.TRANSACTION_ID, pu.FIRST_NAME, po.STATUS, po.TOTALPRICE, to_char(po.PAIDAT, 'dd/mm/yyyy') from PUNTOVENTAS_ORDERS po inner join PUNTOVENTAS_USER pu on(po.id = pu.id) union all select po.TRANSACTION_ID, pu.FIRST_NAME, po.STATUS, po.TOTALPRICE, to_char(po.PAIDAT, 'dd/mm/yyyy') from PUNTOVENTAS_USER pu inner join PUNTOVENTAS_ORDERS po on(pu.id = po.id)");
                
                ResultSet rs = pst.executeQuery();
                
                if (rs.next()) {
                    do {                        
                        ordenes.addCell(rs.getString(1));
                        ordenes.addCell(rs.getString(2));
                        ordenes.addCell(rs.getString(3));
                        ordenes.addCell(rs.getString(4));
                        ordenes.addCell(rs.getString(5));
                       
                    } while (rs.next());
                    
                    documento.add(ordenes);
                    JOptionPane.showMessageDialog(null, "Detalle de ventas emitido");
                }
            } catch (Exception e) {
                System.err.println("Error en obtener datos de ordenes. " + e);
            }
            
            documento.close();
        } catch (DocumentException | IOException e) {
            System.err.println("Error en PDF o ruta del mismo " + e);
            JOptionPane.showMessageDialog(null, "Error al generar el PDF");
        }
    }//GEN-LAST:event_jButton_ImprimirActionPerformed

    private void jButton_BarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BarrasActionPerformed
        GraficoBarras graficoBarras = new GraficoBarras();
        graficoBarras.setVisible(true);
    }//GEN-LAST:event_jButton_BarrasActionPerformed

    private void jButton_CircularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CircularActionPerformed
        GraficoLineal graficoLineal = new GraficoLineal();
        graficoLineal.setVisible(true);
    }//GEN-LAST:event_jButton_CircularActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionOrdenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionOrdenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionOrdenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionOrdenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionOrdenes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Barras;
    private javax.swing.JButton jButton_Circular;
    private javax.swing.JButton jButton_Imprimir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel_Fondo;
    private javax.swing.JLabel jLabel_Titulo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_ordenes;
    // End of variables declaration//GEN-END:variables
}
